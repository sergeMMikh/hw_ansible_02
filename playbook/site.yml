---
- name: Install Clickhouse
  hosts: clickhouse
  become: true
  vars_files:
    - vars.yml
  handlers:
    - name: Start clickhouse service
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - name: Download Clickhouse packages
      block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.x86_64.rpm"
            dest: "{{ pacages_path }}/{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0644"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib (rescue mode)
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "{{ pacages_path }}/clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0644"

    - debug:
        var: rpm_files.stdout_lines

    - name: Install clickhouse packages
      ansible.builtin.yum:
        name: "{{ pacages_path }}/{{ item }}-{{ clickhouse_version }}.rpm"
        disable_gpg_check: true
      loop:
        - clickhouse-common-static
        - clickhouse-client
        - clickhouse-server
      notify: Start clickhouse service
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
    - name: Create Clickhouse database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  become: true
  handlers:
    - name: Start vector service
      ansible.builtin.service:
        name: vector
        state: restarted

  tasks:
    - name: Download vector packages
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-1.x86_64.rpm"
        dest: "./vector-{{ vector_version }}-1.x86_64.rpm"
        mode: "0644" 
        
    - name: Install vector packages
      ansible.builtin.yum:
        name: "./vector-{{ vector_version }}-1.x86_64.rpm"
        disable_gpg_check: true
        state: present

    - name: Apply vector template
      ansible.builtin.template:
        src: vector.yml.j2
        dest: "{{ vector_config_dir }}/vector.yml"
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        validate: vector validate --no-environment --config-yaml %s

    - name: Change vector systemd unit
      ansible.builtin.template:
        src: vector.service.j2
        dest: /usr/lib/systemd/system/vector.service
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        backup: true
      notify: Start vector service

- name: Install Lighthouse
  hosts: lighthouse
  become: true
  vars_files:
    - group_vars/lightHouse/varslh.yml
  
  tasks:
    - name: Gather facts about installed packages
      ansible.builtin.package_facts:

    - name: Swap minimal-curl to curl
      ansible.builtin.shell: | 
        yes | sudo dnf swap curl-minimal curl
      when: "'curl-minimal' in ansible_facts.packages"
        
    - name: Install dependencies
      ansible.builtin.yum:
        name:
          - gcc-c++
          - make
          - curl
        state: present

    - name: Update system packages
      ansible.builtin.yum:
        name: "*"
        state: latest

    - name: Install nvm
      ansible.builtin.shell: |
        curl -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
        source ~/.nvm/nvm.sh
        nvm install {{ nodejs_version }}
        nvm use {{ nodejs_version }}
        npm install -g lighthouse
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"
      
        
    - name: Create Lighthouse directory
      ansible.builtin.file:
        path: /etc/lighthouse
        state: directory
        mode: "0755"

    - name: Copy Lighthouse configuration
      ansible.builtin.template:
        src: lighthouse-config.json.j2
        dest: /etc/lighthouse/config.json
        mode: "0644"

  handlers:
    - name: Restart Lighthouse (if necessary)
      ansible.builtin.service:
        name: lighthouse
        state: restarted